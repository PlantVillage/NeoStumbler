name: Run tests

on:
  push:
    branches:
      - 'master'
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

# Currently this workflow runs tests only for the full variant
# This should be ok, because at the moment there are no tests specific to either variant

jobs:
  unit-test:
    name: Run unit tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}
      - name: Run unit tests
        run: ./gradlew testFullDebugUnitTest
  instrumented-test:
    name: Run instrumented tests
    # Need to use Ubuntu 22.04 because: https://github.com/ReactiveCircus/android-emulator-runner/issues/400
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        api-level: [33]
        target: [google_apis]
        arch: [x86_64]
    steps:
      - name: Delete unnecessary tools
        uses: jlumbroso/free-disk-space@v1.3.1
        with:
          android: false
          tool-cache: true
          dotnet: true
          haskell: true
          swap-storage: true
          docker-images: false
          large-packages: false
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}
      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
      - name: Cache AVD image
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}-${{ matrix.target }}-${{ matrix.arch }}
      - name: Create AVD image
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: ${{ matrix.arch }}
          target: ${{ matrix.target }}
          disk-size: 6000M
          heap-size: 600M
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -no-metrics
          disable-animations: false
          script: echo "AVD snapshot generated"
      - name: Run intrumented tests
        uses: reactivecircus/android-emulator-runner@v2
        timeout-minutes: 15
        with:
          api-level: ${{ matrix.api-level }}
          arch: ${{ matrix.arch }}
          target: ${{ matrix.target }}
          disk-size: 6000M
          heap-size: 600M
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -no-metrics
          disable-animations: true
          script: ./gradlew connectedFullAndroidTest
